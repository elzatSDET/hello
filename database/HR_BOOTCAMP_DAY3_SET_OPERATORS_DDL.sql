

-- use union and union all operator to get the list of people 
-- 1 , make more than 10k 
-- 2 , make less than 25k 

-- observe the difference 
-- union all ,--- just combine two table as is , 
    --- just like putting one brick on top of another brick with same length
    
-- union ,  does everything union all does
    -- + it will remove duplicates , and sort in asc order using first col


SELECT FIRST_NAME, SALARY  FROM EMPLOYEES
WHERE SALARY>10000 
UNION all
SELECT FIRST_NAME, SALARY  FROM EMPLOYEES
WHERE SALARY<2500  ; 

SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY>10000 
UNION 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY<2500  ; 


--- get the list of people who make 10500 --- 13000  -- we have 10 data 

--- get the list of people who make 11600 --- 25000  --  we have 9 data 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10500 AND 13000 
UNION ALL 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 
ORDER BY 1;  

---- USING UNION 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10500 AND 13000  
UNION  
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 ;  

--- back in 3:02 EST -- BREAK TIME -- 
--- WILL CONTINUE SET OPERATOR IN NEXT HOUR AND SOME DDL 

--  USING MINUS 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10500 AND 13000  
MINUS  
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 ;  


--  USING MINUS 
 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 
MINUS 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10500 AND 13000 
;  


-- INTERSECT
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10500 AND 13000  
INTERSECT  
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 ;  



SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 11600 AND 25000 
MINUS
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000  
;  

-- minus will remove everything from first table if it exists in second table 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000    --- 6 data 
MINUS
SELECT FIRST_NAME, SALARY FROM EMPLOYEES  -- 6 data + 3 extra data 
WHERE SALARY BETWEEN 11600 AND 25000
;  

-- ASSUMING 2 TABLE HAS SAME COLUMN COUNT AND COLUMN NAME AND DATA TYPE 
-- IF TABLE1 MINUS TABLE2 RETURN NOTHING 
 -- IN THE MEANTIME 
 -- IF TABLE2 MINUS TABLE1 RETURN NOTHING 
 --- THEN WE CAN ASSURE THAT THESE 2 TABLES HAS SAME DATA 

SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000 
MINUS
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000  
;  

-- minus will remove everything from first table if it exists in second table 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000    --- 6 data 
MINUS
SELECT FIRST_NAME, SALARY FROM EMPLOYEES  -- 6 data 
WHERE SALARY BETWEEN 12500 AND 25000
;  

--- I want to create table with these data 
SELECT FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 12500 AND 25000 ; 

CREATE TABLE EMP_SAL_TABLE1 AS (

        SELECT FIRST_NAME, SALARY FROM EMPLOYEES
        WHERE SALARY BETWEEN 12500 AND 25000 

) ; 

CREATE TABLE EMP_SAL_TABLE2 AS (

        SELECT FIRST_NAME, SALARY FROM EMPLOYEES  -- 6 data + 3 extra data 
        WHERE SALARY BETWEEN 11600 AND 25000

) ; 


SELECT * FROM EMP_SAL_TABLE1 ; 
SELECT * FROM EMP_SAL_TABLE2 ; 

---- VIEW : is like a virtual table -- result of some table 

SELECT * FROM emp_details_view ; 



SELECT e.first_name , r.region_name
from employees e 
join departments d on e.department_id = d.department_id
join locations l on l.location_id = d.location_id
join countries c on l.country_id = c.country_id
join regions r on r.region_id = c.region_id 
--WHERE r.region_name = 'Europe'
ORDER BY r.region_name ; 


SELECT * FROM EMP_NAME_REGION_VIEW ; 



-- DDL Commands 

CREATE TABLE SLACK_USERS
(
  NAME VARCHAR2(20) NOT NULL
, BATCH_NUM NUMBER(2) NOT NULL
, GENDER VARCHAR2(20)

);



INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Ilya', 15 , 'Male') ; 


INSERT INTO SLACK_USERS (NAME, BATCH_NUM) 
                VALUES  ('Jon', 17 ) ; 
                

--INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
--                VALUES  ('aaa', null , 'Male') ; 

INSERT INTO SLACK_USERS VALUES  ('Sumeyye', 15 , 'Female') ; 


INSERT INTO SLACK_USERS VALUES  ('ABC', 77 , null) ; 



--- DROP TABLE SOMETABLENAME 
DROP TABLE SLACK_USERS ; 

SELECT * FROM SLACK_USERS ; 

-- TRUNCATE TABLE SOMETABLENAME
TRUNCATE TABLE SLACK_USERS;


INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Sumeyye', 15 , 'Female') ; 
INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Jon', 1 , 'Male') ; 
INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Ayra', 2 , 'Female') ;            
INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Queen of Ashes', 2 , 'Female') ;  
INSERT INTO SLACK_USERS (NAME, BATCH_NUM, GENDER) 
                VALUES  ('Mad king', 1 , 'Male') ;  
                
                
SELECT * FROM SLACK_USERS ;                 

UPDATE SLACK_USERS
    SET NAME = 'Mohammad' 
    WHERE ID = 4 ; 


DELETE FROM SLACK_USERS 
WHERE ID = 4 ; 





  CREATE TABLE MY_USER3 
   ("ID" NUMBER NOT NULL PRIMARY KEY ENABLE, 
	"NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"BATCH_NUM" NUMBER(2,0) NOT NULL ENABLE, 
	"GENDER" VARCHAR2(20 BYTE), 
	 --CONSTRAINT "MY_USER_PK2" PRIMARY KEY ("ID") ENABLE , 
	 CONSTRAINT "NAME_UK3" UNIQUE ("NAME") ENABLE, 
	 CONSTRAINT "GENDER_CHECK3" CHECK (GENDER IN ('Male','Female')) ENABLE
   )  ;

SELECT * FROM MY_USER3 ; 
DESCRIBE MY_USER3 ; 

